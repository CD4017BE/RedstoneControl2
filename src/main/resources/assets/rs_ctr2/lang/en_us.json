{
  "itemGroup.rs_ctr2": "Redstone Control 2",
  "msg.rs_ctr2.battery": "%s / %s RF in %s Cells",
  "item.rs_ctr2.data_cable": "Data Cable",
  "item.rs_ctr2.data_cable.tip": "Connects one gate's data output\nwith another gate's data input.\nCan't split or merge signals!",
  "block.rs_ctr2.assembler": "Microblock Workbench",
  "block.rs_ctr2.assembler.tip": "Cuts blocks into 1/4 grid Bits\nand disassembles or replicates\nMicroblock Structures.",
  "item.rs_ctr2.microblock": "%s Bit",
  "item.rs_ctr2.microblock.tip": "4x4x4 sub piece of a block,\ncrafted in §6Microblock Workbench§7.",
  "item.rs_ctr2.logic_in": "Logic reader",
  "item.rs_ctr2.logic_in.tip": "All bits of its data output are set to the logical value (ON/OFF) of the received redstone signal.",
  "item.rs_ctr2.analog_in": "Analog reader",
  "item.rs_ctr2.analog_in.tip": "Its data output represents the nummerical value of the received redstone signal.",
  "item.rs_ctr2.logic_out": "Logic emitter",
  "item.rs_ctr2.logic_out.tip": "Emits a redstone signal of 15 if its data input is non-zero.",
  "item.rs_ctr2.analog_out": "Analog emitter",
  "item.rs_ctr2.analog_out.tip": "Emits a redstone signal equal to the nummerical value of its data input.\nSignals outside 0..15 are possible!",
  "block.rs_ctr2.grid": "Microblock Structure",
  "gui.rs_ctr2.destroy": "§cdisassemble\n§7cut blocks",
  "gui.rs_ctr2.replicate": "§areplicate",
  "gui.rs_ctr2.assembler": "Microblock Assembly",
  "advancements.rs_ctr2.root": "Redstone Control 2",
  "advancements.rs_ctr2.root.desc": "The more compact solution!",
  "advancements.rs_ctr2.microblocks": "Small Construction",
  "advancements.rs_ctr2.microblocks.desc": "Cut a block into bits using a Microblock Workbench.",
  "advancements.rs_ctr2.replicate": "Mass production",
  "advancements.rs_ctr2.replicate.desc": "Build a Microblock Structure and replicate it 16 times using the Microblock Workbench.",
  "advancements.rs_ctr2.io": "Redstone I/O",
  "advancements.rs_ctr2.io.desc": "Communicate with the outside world via readers and emitters.",
  "item.rs_ctr2.splitter": "Data Splitter",
  "item.rs_ctr2.constant": "Constant",
  "item.rs_ctr2.clock": "Clock",
  "item.rs_ctr2.not_gate": "NOT-Gate",
  "gui.rs_ctr2.constant": "Value",
  "item.rs_ctr2.xor_gate": "XOR-Gate",
  "item.rs_ctr2.schmitt_trigger": "Schmitt Trigger",
  "item.rs_ctr2.or_gate": "OR-Gate",
  "item.rs_ctr2.and_gate": "AND-Gate",
  "item.rs_ctr2.nand_gate": "NAND-Gate",
  "item.rs_ctr2.nor_gate": "NOR-Gate",
  "item.rs_ctr2.delay": "Delay Line",
  "item.rs_ctr2.comparator": "Comparator",
  "item.rs_ctr2.sr_latch": "SR-Latch",
  "item.rs_ctr2.item_cable": "Item Cable",
  "item.rs_ctr2.fluid_cable": "Fluid Cable",
  "item.rs_ctr2.power_cable": "Power Cable",
  "item.rs_ctr2.fluid_io": "Fluid Port",
  "item.rs_ctr2.power_io": "Power Port",
  "item.rs_ctr2.item_io": "Item Port",
  "item.rs_ctr2.transformer": "Transformer",
  "item.rs_ctr2.battery": "Battery Cell",
  "item.rs_ctr2.item_splitter": "Item access Splitter",
  "item.rs_ctr2.fluid_splitter": "Fluid access Splitter",
  "item.rs_ctr2.fluid_mover": "Fluid Pump",
  "item.rs_ctr2.item_mover": "Item Translocator",
  "item.rs_ctr2.power_splitter": "Power Splitter"
}