{
  "itemGroup.rs_ctr2": "Redstone Control 2",
  "rs_ctr2.subtitle.switch_flip": "Switch flipped",
  "rs_ctr2.subtitle.button_press": "Button pressed",
  "rs_ctr2.subtitle.button_release": "Button unpressed",
  "msg.rs_ctr2.battery": "%s / %s RF in %s Cells",
  "msg.rs_ctr2.fluid_buffer": "%s / %s mB %s in %s Cells",
  "msg.rs_ctr2.decode_hex": "§bDecoding file in intel hex format ...",
  "msg.rs_ctr2.decode_img": "§bDecoding file as image with %sd bits per pixel ...",
  "msg.rs_ctr2.decode_bin": "§bDecoding file as raw binary data ...",
  "msg.rs_ctr2.decode_bmp": "§bDecoding file as bitmap ...",
  "msg.rs_ctr2.import_succ": "§aMemory import successfull!",
  "msg.rs_ctr2.encode_hex": "§bEncoding file in intel hex format ...",
  "msg.rs_ctr2.encode_img": "§bEncoding file as %sdx%sd image with %sd bits per pixel ...",
  "msg.rs_ctr2.encode_bin": "§bEncoding file as raw binary data ...",
  "msg.rs_ctr2.encode_bmp": "§bEncoding file as %sdx%sd bitmap ...",
  "msg.rs_ctr2.export_succ": "§aMemory export successfull!",
  "msg.rs_ctr2.dir_invalid": "§4To protect you from accidentally corrupting game files or other important data, you can not export to files outside the \"rs_ctr2/memory/\" directory.",
  "msg.rs_ctr2.no_file": "§cThe selected file doesn't exist!",
  "msg.rs_ctr2.count_slots": "Counting empty slots.",
  "msg.rs_ctr2.count_items": "Counting all items.",
  "msg.rs_ctr2.count_fluid": "Counting fluid amount",
  "msg.rs_ctr2.count_air": "Counting tank storage remaining",
  "msg.rs_ctr2.count_energy": "Counting available energy",
  "msg.rs_ctr2.count_cap": "Counting storable energy",
  "msg.rs_ctr2.visible": "§aRegion set to visible.",
  "msg.rs_ctr2.invisible": "§cRegion set to invisible.",
  "gui.rs_ctr2.constant": "Value",
  "gui.rs_ctr2.ram": "Memory content",
  "gui.rs_ctr2.ram.layout": "%s2$d words of size %sd bit",
  "gui.rs_ctr2.fmt_w": "Image width\n§7for .png export\nBytes per line\n§7for .hex export",
  "gui.rs_ctr2.fmt_h": "Image height\n§7for .png export",
  "gui.rs_ctr2.import_file": "Import memory from file",
  "gui.rs_ctr2.export_file": "Export memory to file",
  "gui.rs_ctr2.item_placer": "controlled Item User",
  "gui.rs_ctr2.item_placer.slot": "Equipped Item:\n§7Slot: §4%sd §8= bits[0...5]",
  "gui.rs_ctr2.item_placer.aim": "Block surface aim:\n§7right: %sd §8& 0x0F0000\n§7up: %sd §8& 0xF00000",
  "gui.rs_ctr2.item_placer.look": "Look orientation:\n§7yaw: §4%sd §8& 0x000300\n§7pitch: §2%sd §8& 0x000C00\n§7§orelative to §1§oFront",
  "gui.rs_ctr2.item_placer.sneak0": "Crouching: No\n§80x001000",
  "gui.rs_ctr2.item_placer.sneak1": "Crouching: Yes\n§80x00§f1§8000",
  "gui.rs_ctr2.item_placer.side0": "allow existing blocks\n§80x004000",
  "gui.rs_ctr2.item_placer.side1": "don't allow existing blocks\n§80x00§f4§8000",
  "gui.rs_ctr2.item_placer.air0": "Use on Blocks\n§80x008000",
  "gui.rs_ctr2.item_placer.air1": "Use in Air\n§80x00§f8§8000",
  "advancements.rs_ctr2.root": "Redstone Control",
  "advancements.rs_ctr2.root.desc": "Compact circuitry and automation.",
  "advancements.rs_ctr2.microblocks": "Small Construction",
  "advancements.rs_ctr2.microblocks.desc": "Cut a block into bits using a Microblock Workbench.",
  "advancements.rs_ctr2.replicate": "Mass production",
  "advancements.rs_ctr2.replicate.desc": "Build a Microblock Structure and replicate it 16 times using the Microblock Workbench.",
  "advancements.rs_ctr2.io": "Control Panel I",
  "advancements.rs_ctr2.io.desc": "Small control switches and status lamps for logic control",
  "advancements.rs_ctr2.probe": "Circuit Probing",
  "advancements.rs_ctr2.probe.desc": "Use a Gate Probe to see what your circuit is doing.",
  "advancements.rs_ctr2.research": "Redstone Research Lab",
  "advancements.rs_ctr2.research.desc": "Hint: The first few tests can be solved with Minecraft Redstone connected via Logic Emitters & Readers.",
  "advancements.rs_ctr2.button": "Control Panel II",
  "advancements.rs_ctr2.button.desc": "Small flashy buttons (requires Delay Line)",
  "advancements.rs_ctr2.7seg": "Control Panel III",
  "advancements.rs_ctr2.7seg.desc": "7-Segment Displays for numbers",
  "advancements.rs_ctr2.logic": "Basic Logic Gates",
  "advancements.rs_ctr2.logic.desc": "NOT-Gate, OR-Gate, NOR-Gate, AND-Gate, NAND-Gate",
  "advancements.rs_ctr2.logic2": "Advanced Logic Gates",
  "advancements.rs_ctr2.logic2.desc": "XOR-Gate, Multiplexer, SR-Latch",
  "advancements.rs_ctr2.bitlogic": "Bitwise Logic",
  "advancements.rs_ctr2.bitlogic.desc": "With the Bit Shuffle Gate you can manipulate the 32 bits of a Signal individually.",
  "advancements.rs_ctr2.memory": "Memory as Lookup Table",
  "advancements.rs_ctr2.memory.desc": "Sometimes it's easier to use a lookup table instead of complex discrete logic circuits.",
  "advancements.rs_ctr2.arithmetic": "Basic Arithmetics",
  "advancements.rs_ctr2.arithmetic.desc": "Increment Gate, Negation Gate, Add/Subtract Gate",
  "advancements.rs_ctr2.arithmetic2": "Advanced Arithmetics",
  "advancements.rs_ctr2.arithmetic2.desc": "Multiply Gate, Division Gate",
  "advancements.rs_ctr2.comparator": "Digital Comparator",
  "advancements.rs_ctr2.comparator.desc": "Minecraft''s Comparator won''t pass the test.",
  "advancements.rs_ctr2.comparator2": "Advanced Comparison",
  "advancements.rs_ctr2.comparator2.desc": "Schmitt-Trigger, Range Limiter",
  "advancements.rs_ctr2.counter": "Counting & Sequencing",
  "advancements.rs_ctr2.counter.desc": "Counters can also be used as sequencer when combined with memory.",
  "advancements.rs_ctr2.bcd_converter": "Talk in decimal please!",
  "advancements.rs_ctr2.bcd_converter.desc": "By feeding signals through a BCD-Converter, they show up in decimal on a 7-segment display.",
  "advancements.rs_ctr2.wireless": "Wireless Signal Transmission",
  "advancements.rs_ctr2.wireless.desc": "Solve the tests \"Parallel to Serial data\" and \"Serial to Parallel data\".",
  "advancements.rs_ctr2.energy": "Power for small machines",
  "advancements.rs_ctr2.energy.desc": "Solar Cells and Batteries can supply energy to your Microblocks.",
  "advancements.rs_ctr2.item_io": "Compact item transport",
  "advancements.rs_ctr2.item_io.desc": "Use Item Translocators to move items between Item Ports connected to external inventory blocks or entities.",
  "advancements.rs_ctr2.item_buffer": "Item Buffer",
  "advancements.rs_ctr2.item_buffer.desc": "Compact expandable item storage.",
  "advancements.rs_ctr2.item_filter": "Item Routing",
  "advancements.rs_ctr2.item_filter.desc": "Item Filters control what items are extracted or where they are inserted.",
  "advancements.rs_ctr2.dropper": "The floor is inventory",
  "advancements.rs_ctr2.dropper.desc": "Treat dropped items like an inventory via the Item Dropper/Collector.",
  "advancements.rs_ctr2.fluid_io": "Compact fluid transport",
  "advancements.rs_ctr2.fluid_io.desc": "Use Fluid Translocators to move fluid between Fluid Ports connected to external tank or fluid blocks.",
  "advancements.rs_ctr2.fluid_buffer": "Fluid Buffer",
  "advancements.rs_ctr2.fluid_buffer.desc": "Compact expandable fluid storage.",
  "advancements.rs_ctr2.fluid_filter": "Fluid Routing",
  "advancements.rs_ctr2.fluid_filter.desc": "Fluid Filters control what type of fluid is extracted or where it is inserted.",
  "advancements.rs_ctr2.transformer": "Controlled energy transfer",
  "advancements.rs_ctr2.transformer.desc": "Transformers let you move energy between different Battery structures or Power Ports.",
  "advancements.rs_ctr2.block_io": "Spooky action from a distance",
  "advancements.rs_ctr2.block_io.desc": "Block Interaction Ports let machines like Block Breaker act on blocks further away.",
  "advancements.rs_ctr2.block_io2": "Machines playing Snake",
  "advancements.rs_ctr2.block_io2.desc": "Interaction Pipe Drivers give you a movable block target.",
  "advancements.rs_ctr2.block_breaker": "Controlled Block Breaking",
  "advancements.rs_ctr2.machine.desc": "Reaches full potential when used with remote block interaction devices.",
  "advancements.rs_ctr2.item_placer": "Item Interaction Bot",
  "advancements.rs_ctr2.autocraft": "Automatic Crafting",
  "advancements.rs_ctr2.autocraft.desc": "One machine to rule all the recipes!",
  "advancements.rs_ctr2.frames": "3D printing Buildings",
  "advancements.rs_ctr2.frames.desc": "Random Block Access Controllers are much easier to control but also more expensive.",
  "advancements.rs_ctr2.sensors": "Block Sensors",
  "advancements.rs_ctr2.sensors.desc": "Block Hardness Sensor and Plant Growth Sensor are useful for all kinds of automated farms.",
  "item.rs_ctr2.manual": "RS Control Manual",
  "item.rs_ctr2.manual.info": "",
  "item.rs_ctr2.data_cable": "Data Cable",
  "item.rs_ctr2.data_cable.tip": "Connects §none§7 data §aoutput§7\nwith §none§7 data §9input§7.",
  "item.rs_ctr2.logic_in": "Logic reader",
  "item.rs_ctr2.logic_in.tip": "§a⏴§7[t+1] = -1 (all bits high) if received external redstone signal > 0, otherwise 0.",
  "item.rs_ctr2.analog_in": "Analog reader / ADC",
  "item.rs_ctr2.analog_in.tip": "§a⏴§7[t+1] = received external redstone signal.",
  "item.rs_ctr2.comp_in": "Comparator reader",
  "item.rs_ctr2.comp_in.tip": "§a⏴§7[t+1] = external block's comparator signal.",
  "item.rs_ctr2.logic_out": "Logic emitter",
  "item.rs_ctr2.logic_out.tip": "Emits an external redstone signal of 15 if §9⏴§7 ≠ 0 (any bit high), otherwise emits 0.",
  "item.rs_ctr2.analog_out": "Analog emitter / DAC",
  "item.rs_ctr2.analog_out.tip": "Emits an external redstone signal equal to §9⏴§7.\nSignals outside 0..15 are possible!",
  "item.rs_ctr2.splitter.tip": "Repeats its data input to its 5 outputs.",
  "item.rs_ctr2.splitter": "Data Splitter",
  "item.rs_ctr2.constant.tip": "§a⏵§7 = number set in GUI (interact with block).",
  "item.rs_ctr2.constant": "Constant",
  "item.rs_ctr2.clock.tip": "§a⏵§7 switches between 0 and -1 every §9⏴§7 ticks,\npausing if §9⏴§7 < 0 and resets (§a⏵§7 = 0) if §9⏴§7 = 0.",
  "item.rs_ctr2.clock": "Clock",
  "item.rs_ctr2.not_gate.tip": "§a⏵§7 = NOT §9⏴§7 (bitwise)",
  "item.rs_ctr2.not_gate": "NOT-Gate",
  "item.rs_ctr2.xor_gate.tip": "§A⏵§7[t+1] = §9⏷§7 exclusive OR §9⏶§7 (bitwise).\nInitial §9⏷⏶§7 = 0.",
  "item.rs_ctr2.xor_gate": "XOR-Gate",
  "item.rs_ctr2.schmitt_trigger.tip": "if (§9⏴§7 - §9⏷§7) * (§9⏶§7 - §9⏷§7) ≤ 0 then §A⏵§7[t+1] = 0\nelse if (§9⏴§7 - §9⏶§7) * (§9⏶§7 - §9⏷§7) ≥ 0 then §A⏵§7[t+1] = -1\nelse §A⏵§7[t+1] = §A⏵§7[t].\nInitial §9⏴⏷⏶§7 = 0.",
  "item.rs_ctr2.schmitt_trigger": "Schmitt Trigger",
  "item.rs_ctr2.or_gate.tip": "§A⏵§7[t+1] = §9⏴§7 OR §9⏷§7 OR §9⏶§7 (bitwise).\nInitial §9⏴⏷⏶§7 = 0.",
  "item.rs_ctr2.or_gate": "OR-Gate",
  "item.rs_ctr2.and_gate.tip": "§A⏵§7[t+1] = §9⏴§7 AND §9⏷§7 AND §9⏶§7 (bitwise).\nInitial §9⏴⏷⏶§7 = -1.",
  "item.rs_ctr2.and_gate": "AND-Gate",
  "item.rs_ctr2.nand_gate.tip": "§A⏵§7[t+1] = NOT(§9⏴§7 AND §9⏷§7 AND §9⏶§7) (bitwise).\nInitial §9⏴⏷⏶§7 = -1.",
  "item.rs_ctr2.nand_gate": "NAND-Gate",
  "item.rs_ctr2.nor_gate.tip": "§A⏵§7[t+1] = NOT(§9⏴§7 OR §9⏷§7 OR §9⏶§7) (bitwise).\nInitial §9⏴⏷⏶§7 = 0.",
  "item.rs_ctr2.nor_gate": "NOR-Gate",
  "item.rs_ctr2.delay.tip": "§A⏵§7[t+1] = §9⏴§7[t].",
  "item.rs_ctr2.delay": "Delay Line",
  "item.rs_ctr2.comparator.tip": "§A⏵§7[t+1] = -1 if §9⏷§7 < §9⏶§7, otherwise 0.\nInitial §9⏷⏶§7 = 0.",
  "item.rs_ctr2.comparator": "Comparator",
  "item.rs_ctr2.sr_latch.tip": "bitwise: if §9⏷§7 high then §A⏵§7[t+1] = low\nelse if §9⏶§7 high then §A⏵§7[t+1] = high\nelse §A⏵§7[t+1] = §A⏵§7[t]\n§a⏴§7 = NOT §A⏵§7, initial §A⏵§7§9⏷⏶§7 = 0.",
  "item.rs_ctr2.sr_latch": "SR-Latch",
  "item.rs_ctr2.item_cable.tip": "Connects §none§7 §finventory §auser§7\nwith §none§7 §finventory §9provider§7.",
  "item.rs_ctr2.item_cable": "Item Cable",
  "item.rs_ctr2.fluid_cable.tip": "Connects §none§7 §bfluid storage §auser§7\nwith §none§7 §bfluid storage §9provider§7.",
  "item.rs_ctr2.fluid_cable": "Fluid Cable",
  "item.rs_ctr2.power_cable.tip": "Connects §none§7 §eenergy storage §auser§7\nwith §none§7 §eenergy storage §9provider§7.",
  "item.rs_ctr2.power_cable": "Power Cable",
  "item.rs_ctr2.fluid_io.tip": "§b⏴§7 provides the fluid storage of an external block.",
  "item.rs_ctr2.fluid_io": "Fluid Port",
  "item.rs_ctr2.power_io.tip": "§e⏴§7 provides the energy storage of an external block.",
  "item.rs_ctr2.power_io": "Power Port",
  "item.rs_ctr2.item_io.tip": "§f⏴§7 provides the inventory of an external block or entity \nfor slots §9⏷§7 to §9⏶§7 inclusive.\nInitial §9⏷§7 = 0, §9⏶§7 = 255.",
  "item.rs_ctr2.item_io": "Item Port",
  "item.rs_ctr2.transformer.tip": "§a⏵§7 = RF/tick transferred from §e⏷§7 to §e⏶§7.\nPower transfer is limited to §9⏴§7[t-1] RF/tick (can be negative).\nInitial §9⏴§7 = 0.",
  "item.rs_ctr2.transformer": "Transformer",
  "item.rs_ctr2.battery.tip": "Adjacent cells combine.\n§e⏺§7 (use power cable) provides energy storage.\n§a⏺§7 (use data cable) outputs stored RF.",
  "item.rs_ctr2.battery": "Battery Cell",
  "item.rs_ctr2.item_splitter.tip": "Re-provides a used inventory 5 times.",
  "item.rs_ctr2.item_splitter": "Item access Splitter",
  "item.rs_ctr2.fluid_splitter.tip": "Re-provides a used fluid storage 5 times.",
  "item.rs_ctr2.fluid_splitter": "Fluid access Splitter",
  "item.rs_ctr2.fluid_mover.tip": "When any bit in §9⏶-§7[t-1] transitions low to high, it tries to transfer §9-⏶§7[t-1] mB of fluid from §b⏵§7 to §b⏴§7, consuming energy from §e⏴§7 and outputs the actually transferred amount to §a⏵§7.\nInitial §9-⏶§7 = 1000.",
  "item.rs_ctr2.fluid_mover": "Fluid Pump",
  "item.rs_ctr2.item_mover.tip": "When any bit in §9⏶-§7[t-1] transitions low to high, it tries to transfer §9-⏶§7[t-1] items from §f⏵§7 to §f⏴§7, consuming energy from §e⏴§7 and outputs the actually transferred amount to §a⏵§7.\nInitial §9-⏶§7 = 64.",
  "item.rs_ctr2.item_mover": "Item Translocator",
  "item.rs_ctr2.power_splitter.tip": "Re-provides a used energy storage 5 times.",
  "item.rs_ctr2.power_splitter": "Power Splitter",
  "item.rs_ctr2.division_gate.tip": "§A⏵§7[t+1] = §9⏶§7 / §9⏷§7,\n§a⏴§7[t+1] = §9⏶§7 mod §9⏷§7.",
  "item.rs_ctr2.division_gate": "Division Gate",
  "item.rs_ctr2.clamp_gate.tip": "§A⏵§7[t+1] = §lx§7 closest to §9⏴§7, with\nmin(§9⏶§7, §9⏷§7) ≤ §lx§7 ≤ max(§9⏶§7, §9⏷§7).",
  "item.rs_ctr2.clamp_gate": "Range Limiter",
  "item.rs_ctr2.data_mux.tip": "§A⏵§7[t+1] = bitwise §9⏴§7 if §9⏶§7 high, otherwise §9⏷§7.",
  "item.rs_ctr2.data_mux": "Data Multiplexer",
  "item.rs_ctr2.sum_gate.tip": "§A⏵§7[t+1] = §9⏴§7 + §9⏶§7 - §9⏷§7.",
  "item.rs_ctr2.sum_gate": "Add/Subtract Gate",
  "item.rs_ctr2.product_gate.tip": "§A⏵§7[t+1] = §9⏴§7 * §9⏶§7 / 2^§9⏷§7.",
  "item.rs_ctr2.product_gate": "Multiply Gate",
  "item.rs_ctr2.or_buffer.tip": "§a⏵§7 = -1 if §9⏴§7 ≠ 0 (any bit high), otherwise 0.",
  "item.rs_ctr2.or_buffer": "OR-Buffer Gate",
  "item.rs_ctr2.bit_shift.tip": "§a⏵§7[t+1] = §9⏴§7 binary shifted left by §9⏶§7 bits (can be negative).",
  "item.rs_ctr2.bit_shift": "Bit Shifter",
  "item.rs_ctr2.neg_gate.tip": "§a⏵§7 = -§9⏴§7",
  "item.rs_ctr2.neg_gate": "Negation Gate",
  "item.rs_ctr2.battery.ext": "Capacity: %sd RF/cell",
  "item.rs_ctr2.item_mover.ext": "Energy consumption: %sd RF/Stack (64 items)",
  "item.rs_ctr2.fluid_mover.ext": "Energy consumption: %sd RF/Bucket (1024mB)",
  "item.rs_ctr2.solarcell.ext": "Peak power: %sd RF/cell every 8 ticks\nIntegrated sun time: %s.3f",
  "item.rs_ctr2.solarcell": "Solar Cell",
  "item.rs_ctr2.solarcell.tip": "Harvests energy from sunlight.\nMust be placed in top layer, adjacent cells combine.\n§e⏺§7 use power cable for power output.",
  "item.rs_ctr2.probe": "Gate Probe",
  "state.rs_ctr2.transformer": "§a0: §c%sd §7RF/t Flow\n§91: §c%sd §7RF/t Limit\n§a2: §7out §e%ss/%sd RF\n§a3: §7into §e%ss/%ss RF",
  "state.rs_ctr2.fluid_mover": "§90: §c0x%s08X§7 Clock\n§91: §c%sd§7 mB Limit\n§a2: §c%sd§7 mB Moved\n§a3: §e%sd RF§7 available energy\n§a4: §bcan pull fluid: %ss\n§a5: §bcan push fluid: %ss",
  "state.rs_ctr2.item_mover": "§90: §c0x%s08X§7 Clock\n§91: §c%sd§7 stack limit\n§a2: §c%sd§7 items moved\n§a3: §e%sd RF§7 available energy\n§a4: §fcan pull items: %ss\n§a5: §fcan push items: %ss",
  "state.rs_ctr2.division": "§a0: §c%sd§7 A / B\n§a1: §c%sd§7 Remainder\n§92: §c%sd§7 A\n§93: §c%sd§7 B",
  "state.rs_ctr2.mover": "",
  "state.rs_ctr2.no_connection": "Interact on Gate to monitor!",
  "state.rs_ctr2.in": "§a0: §c0x%s08X %s1$d",
  "state.rs_ctr2.ports": "%sd Port(s):",
  "state.rs_ctr2.out": "§90: §c0x%s08X %s1$d",
  "state.rs_ctr2.none": "<no state information>",
  "state.rs_ctr2.splitter": "§90: §c0x%s08X %s1$d\n§c-> §a1 2 3 4 5",
  "state.rs_ctr2.battery": "§a0: §c%sd§7 RF stored\n§e   %sd§7 RF capacity",
  "state.rs_ctr2.gate1": "§a0: §c0x%s08X %s1$d\n§91: §c0x%s08X %s2$d",
  "state.rs_ctr2.gate2": "§a0: §c0x%s08X %s1$d\n§91: §c0x%s08X %s2$d\n§92: §c0x%s08X %s3$d",
  "state.rs_ctr2.gate3": "§a0: §c0x%s08X %s1$d\n§91: §c0x%s08X %s2$d\n§92: §c0x%s08X %s3$d\n§93: §c0x%s08X %s4$d",
  "state.rs_ctr2.direct": "§90: §c?\n§a1: §c0x%s08X %s1$d",
  "state.rs_ctr2.clock": "§a0: §c0x%s08X§7 Clock\n§91: §c%sd§7 Ticks\nt = %sd",
  "state.rs_ctr2.item_io": "§a0: §5%ss\n§91: §fInventory [%sd Slots]\n§92: §c%sd§7 First Slot\n§93: §c%sd§7 Last Slot",
  "state.rs_ctr2.sr_latch": "§a0: §c0x%s08X§7 Q\n§a1: §c0x%s08X§7 ¬Q\n§92: §c0x%s08X§7 Reset\n§93: §c0x%s08X§7 Set",
  "state.rs_ctr2.comp": "§a0: §c0x%s08X§7 Big > Small\n§91: §c%sd§7 Small\n§92: §c%sd§7 Big",
  "state.rs_ctr2.mux": "§a0: §c0x%s08X %s1$d\n§91: §c0x%s08X§7 Control\n§92: §c0x%s08X %s3$d§7 I0\n§93: §c0x%s08X %s4$d§7 I1",
  "state.rs_ctr2.clamp": "§a0: §c%sd§7 Output\n§91: §c%sd§7 Input\n§92: §c%sd§7 Minimum\n§93: §c%sd§7 Maximum",
  "state.rs_ctr2.sum": "§a0:§7 Σ §c%sd\n§91:§7 + §c%sd\n§92:§7 + §c%sd\n§93:§7 - §c%sd",
  "state.rs_ctr2.shift": "§a0: §c0x%s08X %s1$d\n§91: §c0x%s08X %s2$d\n§92: §c%sd§7 Bit shift <<",
  "state.rs_ctr2.multiply": "§a0:§7 Π §c%sd\n§91:§7 x §c%sd\n§92:§7 x §c%sd\n§93:§7 /2^ §c%sd",
  "state.rs_ctr2.schmitt_trigger": "§a0: §c0x%s08X§7 State\n§91: §c%sd§7 Input\n§92: §c%sd§7 OFF threshold\n§93: §c%sd§7 ON threshold",
  "block.rs_ctr2.autocraft": "Automatic Crafter",
  "gui.rs_ctr2.autocraft": "Buffer            Crafting",
  "gui.rs_ctr2.pattern": "Pattern hex code",
  "item.rs_ctr2.counter": "Counter",
  "item.rs_ctr2.memory": "Memory Cell",
  "item.rs_ctr2.memory.ext": "Size: %sd bit/cell",
  "item.rs_ctr2.mem_write": "Memory Writer",
  "item.rs_ctr2.mem_read": "Memory Reader",
  "state.rs_ctr2.counter": "§a0: §c%sd§7 Count\n§a1: §c0x%s08X§7 Overflow\n§92: §c%sd§7 Max Count\n§93: §c0x%s08X§7 Increment",
  "state.rs_ctr2.mem_read": "§a0: §c0x%sX %s1$d§7 value\n§81: %sdbit§7 Memory\n§92: §c0x%s04X %s3$d§7 address\n§93: §c%sd§7 bits per word",
  "state.rs_ctr2.memory": "Memory size = %sd bit",
  "state.rs_ctr2.mem_write": "§80: %sdbit§7 Memory\n§91: §c0x%sX %s2$d§7 value\n§92: §c0x%s04X %s3$d§7 address\n§93: §c%sd§7 bits per word",
  "item.rs_ctr2.counter.tip": "When any bit in §9⏷§7[t-1] transitions low to high then §A⏵§7 increments by one. §A⏵§7 resets to 0 if ≥ §9⏴§7[t-1].\n§A⏶§7 = §9⏷§7[t-1] if §A⏵§7 = 0 AND §9⏴§7[t-1] > 0 otherwise §A⏶§7 = 0.",
  "item.rs_ctr2.mem_read.tip": "§a⏶§7[t+1] = read word of size §9⏴§7 bits at index §9⏷§7 in memory §8⏵§7.\nA read happens @ t+½ when §9⏷§7 or §9⏴§7 changed and §9⏴§7 ≠ 0.\n§4Word size must be a power of two or results are undefined!",
  "item.rs_ctr2.mem_write.tip": "Writes §9⏶§7 as word of size §9⏴§7 bits to index §9⏷§7 in memory §8⏵§7.\nA write happens @ t+1 when §9⏶§7, §9⏷§7 or §9⏴§7 changed and §9⏴§7 ≠ 0.\nWhen multiple writes to the same 32 bit block of the same memory happen in the same tick, only one will succeed!\n§4Word size must be a power of two or results are undefined!",
  "item.rs_ctr2.memory.tip": "Stores data that can be read and written by connected §6Memory Reader§7s and §6Writer§7s.\nContent can be viewed by interacting.\nAdjacent cells combine.\n§4Removing cells or merging structures may cause data loss!",
  "item.rs_ctr2.corerope2": "Core Rope Matrix",
  "item.rs_ctr2.corerope1": "Weaved Core Rope",
  "block.rs_ctr2.block_breaker": "controlled Block Breaker",
  "block.rs_ctr2.item_placer": "controlled Item User",
  "gui.rs_ctr2.item_placer.restock0": "auto restock\n§80x000080",
  "gui.rs_ctr2.item_placer.restock1": "No restock\n§80x0000§f8§80",
  "block.rs_ctr2.frame": "Interaction Frame",
  "item.rs_ctr2.block_cable": "Block Interaction Cable",
  "item.rs_ctr2.block_cable.tip": "Connects §none§7 §5block interaction §auser§7\nwith §none§7 §5block interaction §9provider§7.",
  "item.rs_ctr2.block_io": "Block Interaction Port",
  "item.rs_ctr2.block_splitter": "Block Interaction Splitter",
  "item.rs_ctr2.block_splitter.tip": "Re-provides a used block interaction 5 times.",
  "state.rs_ctr2.link1": "%sd #%s08X -> %sd",
  "state.rs_ctr2.link2": "%sd <-> %sd Cable link",
  "state.rs_ctr2.link3": "%sd #%s08X",
  "state.rs_ctr2.links": "     Connection Debug Info:",
  "state.rs_ctr2.link0": "%sd Cable End -> %sd",
  "state.rs_ctr2.autocraft": "§90: §c0x%s08X§7 Crafting Clock\n§91: §c0x%s08X§7 Low 2x3 Pattern\n§92: §c0x%s03X§7 Top 1x3 Pattern\n§93: §c0x%sX§7 I/O Slot\n§94: §fInternal Inventory\n§a5: §c0x%s01X§7 Error Code\n§a6: §e%sd RF§7 available energy",
  "state.rs_ctr2.block_breaker": "§90: §c0x%s08X§7 Clock\n§a1: §c0x%s01X§7 Error Code\n§a2: §e%sd RF§7 available energy\n§a3: §fcan output loot: %ss\n§a4: §5%ss",
  "state.rs_ctr2.item_placer": "§90: §c0x%s08X§7 Clock\n§95: §c0x%s06X§7 Interact Settings\n§a1: §c0x%s01X§7 Error Code\n§a2: §e%sd RF§7 available energy\n§a3: §fcan restock hand: %ss\n§a4: §5%ss",
  "state.rs_ctr2.solar": "Generating %sd RF / 8 ticks\n§a0: §e%sd RF§7 storable energy",
  "state.rs_ctr2.power_io": "§a0: §5%ss\n§91: §e%sd/%sd RF§7 storage",
  "cd4017be.unloaded": "<position unloaded>",
  "state.rs_ctr2.fluid_io": "§a0: §5%ss\n§91: §bis fluid container: %ss",
  "item.rs_ctr2.and_filter": "Bit Shuffle Gate",
  "item.rs_ctr2.and_filter.tip": "§A⏵§7 = §9⏴§7 AND number set in GUI (interact with block).",
  "state.rs_ctr2.and_filter": "§7#: §c0x%s08X§7 AND-mask\n§90: §c0x%s08X§7 IN\n§a1: §c0x%s08X§7 OUT",
  "item.rs_ctr2.switch": "Small Switch",
  "item.rs_ctr2.led": "Small Lamp",
  "item.rs_ctr2.switch.tip": "§A⏵§7 = -1 if ON, 0 if OFF.",
  "item.rs_ctr2.led.tip": "Lights up if §9⏵§7 ≠ 0.\nInteract with dye to change color.",
  "item.rs_ctr2.switch_array": "Binary Switch Array",
  "item.rs_ctr2.led_array": "Binary Lamp Array",
  "item.rs_ctr2.switch_array.tip": "§a⏵§7 = binary number represented by switches.\nInteract with Switch Arrays on the sides to extend.",
  "item.rs_ctr2.led_array.tip": "Displays §9⏵§7 in binary.\nInteract with Lamp Arrays on the sides to extend.\nInteract with dye to change color.",
  "item.rs_ctr2._7segment": "7-Segment Display",
  "item.rs_ctr2._7segment.tip": "Displays §9⏵§7 as hexadecimal number (see §6BCD-Converter§7).\nInteract with Displays on the sides to extend.\nInteract with dye to change color.",
  "item.rs_ctr2.bcd_converter": "BCD-Converter",
  "item.rs_ctr2.bcd_converter.tip": "§a⏵§7 = §9⏴§7 converted to \"binary counted decimal\".\nUsed to display decimal numbers on §67-Segment Display§7s.",
  "block.rs_ctr2.pipe_controller": "Interaction Pipe Driver",
  "block.rs_ctr2.access_pipe": "Interaction Pipe",
  "state.rs_ctr2.pipe_controller": "§90: §c%sd§7 Direction [↑↓⨂⨀←→]\n§91: §f%sd Interaction Pipes\n§92,3: §5%ss",
  "block.rs_ctr2.access_pipe.tip": "Inserted into the §fInventory Port§7 of an §6Interaction Pipe Driver§7 for path building.",
  "block.rs_ctr2.pipe_controller.tip": "Lets machines §5interact with distant blocks§7 via a path of §6Interaction Pipe§7 that extends by insertion and retracts by extraction of items through its §finventory port§7.\nExtending direction and target block are controlled by §cdata input§7 [t-½].",
  "block.rs_ctr2.item_placer.tip": "Performs an emulated player interaction on the block in front of it, whenever any bit in §9clock§7[t-1] transitions low to high.\n§9Settings§7[t-1] controls interaction parameters such as selected Item, aim, crouching, ... (see GUI).\nConsumed items are automatically restocked from the §fconnected Inventory§7.\n§aError Codes§7: 1 = block unloaded, 2 = action failed/passed, 4 = couldn't restock, 8 = no energy. ",
  "block.rs_ctr2.block_breaker.tip": "Breaks the block in front of it whenever any bit in §9clock§7[t-1] transitions low to high.\nHarvested items are send to the §fconnected Inventory§7.\n§aError Codes§7: 1 = unloaded block, 2 = unbreakable/air, 4 = inventory full, 8 = no energy.",
  "block.rs_ctr2.autocraft.tip": "Automatically crafts items based on a hexadecimal §9pattern§7 that maps the crafting grid slots onto its 16-slot §finternal inventory§7.\nCrafting is executed @ t+½ whenever any bit in §9clock§7 transitioned low to high.\n§aError Codes§7: 1 = missing ingredients, 2 = invalid recipe, 4 = output slot full, 8 = no energy.",
  "block.rs_ctr2.pipe_controller.ext": "Pipe can extend up to %sd blocks.",
  "block.rs_ctr2.block_breaker.ext": "Energy Consumption: %sd RF + block_hardness * %sd RF",
  "block.rs_ctr2.autocraft.ext": "Energy consumption: %sd RF per craft.",
  "block.rs_ctr2.item_placer.ext": "Energy Consumption: %sd RF",
  "item.rs_ctr2.item_filter": "Item Filter",
  "item.rs_ctr2.item_counter": "Item Counter",
  "state.rs_ctr2.slot_counter": "§a0: §c%sd§7 Empty Slots\n§a1: §fhas Inventory: %ss\n§92: §c%s08X§7 Clock",
  "state.rs_ctr2.item_counter": "§a0: §c%sd§7 Item Count\n§a1: §fhas Inventory: %ss\n§92: §c%s08X§7 Clock",
  "state.rs_ctr2.item_filter": "§90: §fprovided Inventory\n§91: §c%sd§7 extraction mode\n§a2: §fhas filtered Path: %ss\n§a3: §fhas \"else\" Path: %ss",
  "gui.rs_ctr2.item_filter": "Item Filter",
  "item.rs_ctr2.item_counter.tip": "Counts the number of Items in inventory §f⏵§7.\nResult §A⏴§7 is updated whenever any bit in §9⏶§7 transitions low to high.",
  "item.rs_ctr2.item_filter.tip": "Items inserted to §f⏵§7 go the filtered path §f⏷§7 if they match any item in the filter, otherwise they go the \"else\" path §f⏴§7.\nExtraction is controlled by §9⏶§7:\n-2 = from §f⏷§7, all items as blacklist\n\n-1 = from §f⏷§7, all items as whitelist\n0...7 = from §f⏷§7, matching single item\n8... = from \"else\" path §f⏴§7, unfiltered\nFilter items are set in GUI (interact with block).",
  "gui.cd4017be.scroll": "Slots %s.0f... / %s3$.0f",
  "item.rs_ctr2.item_buffer": "Item Buffer",
  "gui.rs_ctr2.buffer_fill": "%s.0f/%s3$.0f Items",
  "gui.rs_ctr2.scroll": "Slots %s.0f... / %s3$.0f",
  "item.rs_ctr2.item_dropper": "Item Dropper/Collector",
  "item.rs_ctr2.item_buffer.ext": "Capacity: %sd items per cell\n1 unique item per cell.",
  "item.rs_ctr2.item_buffer.tip": "Inserted items are stacked with existing content if possible and different items are stored as \"first in first out\" queue with a shared stack limit.\nAdjacent cells combine.\n§f⏺§7 (use item cable) provides inventory.",
  "gui.rs_ctr2.item_buffer": "Item Buffer",
  "item.rs_ctr2.data_send": "Wireless Data Transmitter",
  "item.rs_ctr2.data_recv": "Wireless Data Receiver",
  "item.rs_ctr2.block_recv": "Wireless Block Interaction Receiver",
  "item.rs_ctr2.block_send": "Wireless Block Interaction Transmitter",
  "state.rs_ctr2.wireless": "§a0: §7Link #%s08X from\n%ss",
  "item.rs_ctr2.data_send.tip": "§9⏵§7 gets send to §a⏵§7 of linked Receiver.\n§oYou get the linked §6§oWireless Data Receiver§7§o during initial placement.",
  "item.rs_ctr2.data_recv.tip": "§a⏵§7 = §9⏵§7 of linked Transmitter.",
  "item.rs_ctr2.block_send.tip": "§9⏵§7 propagates interaction to §a⏵§7 of linked Receiver.\n§oYou get the linked §6§oWireless Block Interaction Receiver§7§o during initial placement.",
  "item.rs_ctr2.block_recv.tip": "§a⏵§7 <- §9⏵§7 of linked Transmitter.",
  "item.rs_ctr2.item_dropper.tip": "§f⏴§7 drops items or picks them up.",
  "item.rs_ctr2.hardness_sensor": "Block Hardness Sensor",
  "state.rs_ctr2.sensor": "§a0: §5%ss\n§a1: §c%sd§7 value\n§92: §c%s08X§7 Clock",
  "state.rs_ctr2.data_send": "§90: §c0x%s08X %s1$d\n§7to Link #%s08X",
  "state.rs_ctr2.block_send": "§90: §5%ss\n§7to Link #%s08X",
  "item.wireless.link": "Link #%s08X",
  "state.rs_ctr2.res_splitter": "§a0: §fConnected: %ss\n§7<- §91 2 3 4 5",
  "state.rs_ctr2.block_splitter": "§a0: §5%ss\n§7<- §91 2 3 4 5",
  "state.rs_ctr2.power_splitter": "§a0: §e%sd / %sd RF\n§e<- §91 2 3 4 5",
  "state.rs_ctr2.item_buffer": "%sd/%sd§7 Items stored\n%sd/%sd§7 Types used",
  "item.rs_ctr2.label": "Text Label",
  "item.rs_ctr2.label.tip": "Interact with empty hand to edit text.\nInteract with Labels on the sides to extend.\nInteract with dye to change colors.\n§oCrouch placement recommended!",
  "gui.rs_ctr2.label": "Label text",
  "block.rs_ctr2.frame_controller": "Random Block Access Controller",
  "state.rs_ctr2.frame_controller": "§90: §c%sd§7 ← [%sd...%sd]\n§91: §c%sd§7 ↑ [%sd...%sd]\n§92: §c%sd§7 ⨂ [%sd...%sd]\n§93: §5%ss",
  "block.rs_ctr2.frame.tip": "Must be placed in all 8 (up to 27) corners of the cubiod regions that §6Random Block Access Controller§7s should operate in.\nDevices connect to the closest axis aligned Frame block and use the sourrounding regions (up to 8) combined.",
  "block.rs_ctr2.frame.ext": "Frames connect up to %sd blocks apart and to machines within %sd blocks.",
  "block.rs_ctr2.frame_controller.tip": "Provides interaction with blocks inside a cuboid region defined by §6Interaction Frame§7s.\nThe block is selected with 3 supplied §ccoordinate-numbers§7 [t-½] that are relative to the connected origin Frame.",
  "item.rs_ctr2.button": "Small Button",
  "item.rs_ctr2.button.tip": "§A⏵§7 = -1 if ON, 0 if OFF.\nTurns off after a delay (crouch interact to configure).",
  "gui.rs_ctr2.pulse_len": "Pulse Length",
  "item.rs_ctr2.fluid_buffer": "Fluid Buffer",
  "item.rs_ctr2.fluid_buffer.tip": "Stores a single type of fluid.\nAdjacent cells combine.\n§b⏺§7 (use fluid cable) provides fluid access.",
  "item.rs_ctr2.fluid_buffer.ext": "Capacity: %sd mB per cell",
  "state.rs_ctr2.fluid_buffer": "Contains §b%ss\n%sd / %sd mB",
  "item.rs_ctr2.fluid_counter": "Fluid Counter",
  "item.rs_ctr2.fluid_filter.tip": "Items inserted to §b⏵§7 go the filtered path §b⏷§7 if they match the fluid in the filter, otherwise they go the \"else\" path §b⏴§7.\nExtraction is controlled by §9⏶§7:\n-1 = from §b⏷§7, excluded by the filter\n0 = from §b⏷§7, matching the filter\n1... = from \"else\" path §b⏴§7, unfiltered\nFluid is set by interacting with Bucket.",
  "item.rs_ctr2.fluid_filter": "Fluid Filter",
  "item.rs_ctr2.fluid_counter.tip": "Counts the amount of Fluid in tank §b⏵§7.\nResult §A⏴§7 is updated whenever any bit in §9⏶§7 transitions low to high.",
  "state.rs_ctr2.fluid_counter": "§a0: §c%ss§7 mB Fluid\n§a1; §bhas fluid: %ss\n§92: §c0x%s08X§7 Clock",
  "state.rs_ctr2.air_counter": "§a0: §c%ss§7 mB rem. space\n§a1; §bhas fluid: %ss\n§92: §c0x%s08X§7 Clock",
  "state.rs_ctr2.fluid_filter": "§90: §bprovided Fluid Access\n§91: §c%sd§7 extraction mode\n§a2: §bhas filtered Path: %ss\n§a3: §bhas \"else\" Path: %ss\n§7Filter = §b%ss",
  "item.rs_ctr2.hardness_sensor.tip": "Measures the hardness (150 for stone) of the block at §5⏵§7.\nResult §A⏴§7 is updated whenever any bit in §9⏶§7 transitions low to high.",
  "item.rs_ctr2.growth_sensor.tip": "Measures the growth stage of a plant at §5⏵§7:\n0 = not a plant block\n1 = still growing\n2 = fully grown\nResult §A⏴§7 is updated whenever any bit in §9⏶§7 transitions low to high.",
  "item.rs_ctr2.growth_sensor": "Plant Growth Sensor",
  "item.rs_ctr2.power_counter.tip": "Counts the amount of Energy in storage §e⏵§7.\nResult §A⏴§7 is updated whenever any bit in §9⏶§7 transitions low to high.",
  "item.rs_ctr2.power_counter": "Energy Counter",
  "state.rs_ctr2.cap_counter": "§a0: §c%ss§7 RF storable\n§a1; §eis connected: %ss\n§92: §c0x%s08X§7 Clock",
  "state.rs_ctr2.energy_counter": "§a0: §c%ss§7 RF available\n§a1; §eis connected: %ss\n§92: §c0x%s08X§7 Clock",
  "item.rs_ctr2.const_inc.tip": "§A⏵§7 = §9⏴§7 + number set in GUI (interact with block).",
  "item.rs_ctr2.const_inc": "Increment Gate",
  "state.rs_ctr2.const_inc": "§7#: §c%sd§7 Increment\n§90: §c%sd§7 IN\n§a1: §c%sd§7 OUT",
  "state.rs_ctr2.dropper": "§a0: §5%ss\n§91: §f%sd dropped Items",
  "state.rs_ctr2.block_io": "§90: §5%ss",
  "block.rs_ctr2.circuit_tester": "Redstone Research Lab",
  "block.rs_ctr2.circuit_tester.tip": "Required to unlock recipes for circuit components (if enabled via game rule).\nBuild a functioning circuit that, when connected to the ports on the back, will pass the test for the component to you want to unlock.",
  "item.rs_ctr2.probe.tip": "Provides information about signal states of circuit components.",
  "test.rs_ctr2.half_adder": "Half-Adder [for help]",
  "test.rs_ctr2.full_adder": "Full-Adder [for help]",
  "test.rs_ctr2.adder32": "32 Bit Adder [for help]",
  "test.rs_ctr2.ls0": "Compare < 0 [for help]",
  "test.rs_ctr2.data_send": "Parallel to Serial data",
  "test.rs_ctr2.data_recv": "Serial to Parallel data",
  "gui.rs_ctr2.circuit_test": "No test active",
  "gui.rs_ctr2.test_prog": "Step %sd / %sd",
  "gui.rs_ctr2.errors": "%sd Failed",
  "gui.rs_ctr2.hex0": "Decimal format",
  "gui.rs_ctr2.test_mode0": "Run test",
  "gui.rs_ctr2.hex1": "Hexadecimal format",
  "gui.rs_ctr2.test_lat": "I/O latency",
  "gui.rs_ctr2.test_int": "Test interval",
  "gui.rs_ctr2.text_open": "Select a test",
  "gui.rs_ctr2.test_in": "Supplied Value",
  "gui.rs_ctr2.test_out": "Expected Result\n[got: %ss]",
  "gui.rs_ctr2.test_res": "Test complete",
  "gui.rs_ctr2.test_mode1": "Stop test",
  "gui.rs_ctr2.test_mode2": "Unlock part",
  "gui.rs_ctr2.bit_shuffle": "Bit Transform",
  "gui.rs_ctr2.and_mask": "AND-mask",
  "gui.rs_ctr2.xor_mask": "XOR-mask",
  "gui.rs_ctr2.shift": "bit rotation"
}